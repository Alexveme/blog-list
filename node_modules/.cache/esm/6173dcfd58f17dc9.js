let express,cors,mongoose,blogRouter;_58f‍.w("express",[["default",["express"],function(v){express=v}]]);_58f‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_58f‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_58f‍.w("./blogRouter.js",[["default",["blogRouter"],function(v){blogRouter=v}]]);





const app = express()

const mongoUrl = 'mongodb+srv://prueba:prueba@cluster0-cg3jl.mongodb.net/notasdb?retryWrites=true&w=majority'
mongoose.connect(mongoUrl, { useNewUrlParser: true, useUnifiedTopology: true })

app.use(cors())
app.use(express.json())

app.use('/api/blogs', blogRouter);

/*app.post('/api/blogs', (request, response) => {
  const blog = new Blog({
      title: request.body.title,
      author: request.body.author,
      url: request.body.url,
      likes: request.body.likes,
  })

  blog
    .save()
    .then(result => {
      response.status(201).json(result);
      mongoose.connection.close();
    })
})*/

const PORT = 9000
app.listen(PORT, () => {
  console.log(`Server running on port ${PORT}`)
})